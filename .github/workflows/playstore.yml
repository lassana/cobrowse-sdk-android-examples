name: Publish the sample app to the Google Play Store

on:
  push:
    branches: [ master ]
    paths:
      - 'sample/**'
      - 'build.gradle'
      - '.github/workflows/playstore.yml'
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Find SDK version
        run: |
          echo "COBROWSE_VERSION=$(cat sample/build.gradle | grep -oP 'io\.cobrowse\:cobrowse-sdk-android\:\K([0-9]+\.[0-9]+\.[0-9]+)')" >> $GITHUB_ENV
      - name: Set up secrets
        env:
          COBROWSE_SAMPLE_KEYSTORE_BASE_64: ${{ secrets.COBROWSE_SAMPLE_KEYSTORE_BASE_64 }}
          COBROWSE_SAMPLE_KEYSTORE_PROPERTIES: ${{ secrets.COBROWSE_SAMPLE_KEYSTORE_PROPERTIES }}
          COBROWSE_SAMPLE_GOOGLE_SERVICES_JSON: ${{ secrets.COBROWSE_SAMPLE_GOOGLE_SERVICES_JSON }}
          COBROWSE_STANDALONE_KEYSTORE_BASE_64: ${{ secrets.COBROWSE_STANDALONE_KEYSTORE_BASE_64 }}
          COBROWSE_STANDALONE_KEYSTORE_PROPERTIES: ${{ secrets.COBROWSE_STANDALONE_KEYSTORE_PROPERTIES }}
          COBROWSE_STANDALONE_GOOGLE_SERVICES_JSON: ${{ secrets.COBROWSE_STANDALONE_GOOGLE_SERVICES_JSON }}
          COBROWSE_GOOGLE_SERVICE_ACCOUNT_JSON: ${{ secrets.COBROWSE_GOOGLE_SERVICE_ACCOUNT_JSON }}
        # Yes, python is the simplest way to write a Github secret into a file keeping new line breaks
        # https://github.com/orgs/community/discussions/24928#discussioncomment-6059242
        run: |
          python -c "import os; import base64;  file = open('sample/cobrowse.keystore',             'wb');  file.write(base64.b64decode(os.environ['COBROWSE_SAMPLE_KEYSTORE_BASE_64']        ));  file.close()"
          python -c "import os;                 file = open('sample/cobrowse.keystore.properties',  'w');   file.write(                 os.environ['COBROWSE_SAMPLE_KEYSTORE_PROPERTIES']      );  file.close()"
          python -c "import os;                 file = open('sample/google-services.json',          'w');   file.write(                 os.environ['COBROWSE_SAMPLE_GOOGLE_SERVICES_JSON']     );  file.close()"
          python -c "import os; import base64;  file = open('standalone/standalone.jks',            'wb');  file.write(base64.b64decode(os.environ['COBROWSE_STANDALONE_KEYSTORE_BASE_64']    ));  file.close()"
          python -c "import os;                 file = open('standalone/standalone.jks.properties', 'w');   file.write(                 os.environ['COBROWSE_STANDALONE_KEYSTORE_PROPERTIES']  );  file.close()"
          python -c "import os;                 file = open('standalone/google-services.json',      'w');   file.write(                 os.environ['COBROWSE_STANDALONE_GOOGLE_SERVICES_JSON'] );  file.close()"
          python -c "import os;                 file = open('service_account.json',                 'w');   file.write(                 os.environ['COBROWSE_GOOGLE_SERVICE_ACCOUNT_JSON']     );  file.close()"
      - name: Bump the app version code
        run: |
          COBROWSE_VERSION_CODE_OLD=$(grep "versionCode" sample/build.gradle | awk '{print $2}' | tr -d '\n')
          echo "COBROWSE_VERSION_CODE_OLD is ${COBROWSE_VERSION_CODE_OLD}"
          COBROWSE_VERSION_CODE=$((${COBROWSE_VERSION_CODE_OLD} + ${{github.run_number}}))
          echo "COBROWSE_VERSION_CODE is ${COBROWSE_VERSION_CODE}"
          sed -i "s/versionCode [0-9]\+/versionCode ${COBROWSE_VERSION_CODE}/g" sample/build.gradle
          sed -i "s/\(versionName[[:space:]]*\).*/\\1\"${COBROWSE_VERSION}\"/" sample/build.gradle
          echo "Printing sample/build.gradle:"
          cat sample/build.gradle
      - name: Build the AAB
        run: |
          ./gradlew sample:bundleRelease
      - name: Upload to the Play Store
        id: publish
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: service_account.json
          packageName: io.cobrowse.demo
          releaseFiles: sample/build/outputs/bundle/release/sample-release.aab
          track: production
          changesNotSentForReview: true
